name: Deployment

on:
  push:
    branch:
      - 'release'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Derive Tag Name And Populate version.ts
        id: derive_tag
        run: |
          echo well hello there
          TAG=$(basename "${{ github.ref }}")
          echo dt $TAG
  approve1:
    runs-on: ubuntu-latest
    environment: Production
    needs: build
    steps:
      - name: No Op
        id: no_op
        run: |
          echo Do Nothing
  approve2:
    runs-on: ubuntu-latest
    environment: Production2
    needs: build
    steps:
      - name: No Op
        id: no_op
        run: |
          echo Do Nothing
  confirm:
    runs-on: ubuntu-latest
    needs:
     - approve1
     - approve2
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
        with:
          fetch-depth: 0
      - uses: actions/github-script@v4
        with:
          script: |
            // Get the approvals for this run
            const approvals = await github.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            })
            console.log(approvals.data)
            const users = approvals.data.filter(approval => approval.user.type === 'User')
            // Empty check
            if (users.length < 2){
              core.setFailed(`There are not 2 distinct approvals for this deployment. This is not allowed.`);          
              return; 
            }

